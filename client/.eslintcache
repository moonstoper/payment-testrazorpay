[{"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payStatusReducer.js":"1","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Page1.tsx":"2","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Checkuser.tsx":"3","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\updateTransaction.js":"4","D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\PaymentPage.tsx":"5","D:\\worksz\\ionic\\payment-mod\\client\\src\\actions\\index.js":"6","D:\\worksz\\ionic\\payment-mod\\client\\src\\App.tsx":"7","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\userInfo.js":"8","D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\loadscript.tsx":"9","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\LoginPage.tsx":"10","D:\\worksz\\ionic\\payment-mod\\client\\src\\index.tsx":"11","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\index.js":"12","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payReducer.js":"13","D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\TransactionUpdate.tsx":"14","D:\\worksz\\ionic\\payment-mod\\client\\src\\serviceworker.tsx":"15","D:\\worksz\\ionic\\payment-mod\\client\\src\\servicework.js":"16","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\RegisterPage.tsx":"17"},{"size":326,"mtime":1608246762516,"results":"18","hashOfConfig":"19"},{"size":4151,"mtime":1608407917320,"results":"20","hashOfConfig":"19"},{"size":3722,"mtime":1608411354406,"results":"21","hashOfConfig":"19"},{"size":354,"mtime":1608246817343,"results":"22","hashOfConfig":"19"},{"size":3138,"mtime":1608249058592,"results":"23","hashOfConfig":"19"},{"size":2456,"mtime":1608408616732,"results":"24","hashOfConfig":"19"},{"size":1031,"mtime":1608407907274,"results":"25","hashOfConfig":"19"},{"size":313,"mtime":1608246849109,"results":"26","hashOfConfig":"19"},{"size":1444,"mtime":1608409138204,"results":"27","hashOfConfig":"19"},{"size":2000,"mtime":1608409078101,"results":"28","hashOfConfig":"19"},{"size":1084,"mtime":1608411812205,"results":"29","hashOfConfig":"19"},{"size":413,"mtime":1608246688621,"results":"30","hashOfConfig":"19"},{"size":368,"mtime":1608246735062,"results":"31","hashOfConfig":"19"},{"size":1044,"mtime":1608246644095,"results":"32","hashOfConfig":"19"},{"size":4745,"mtime":1608390434961,"results":"33","hashOfConfig":"19"},{"size":199,"mtime":1608403856832,"results":"34","hashOfConfig":"19"},{"size":1668,"mtime":1608411795049,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"61762c",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payStatusReducer.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Page1.tsx",["76"],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Checkuser.tsx",["77","78","79","80"],"import {\r\n  Button,\r\n  Card,\r\n  CircularProgress,\r\n  CardActions,\r\n  Typography,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport * as actions from \"../actions\";\r\nimport {LoadRazer,recieptgenerator} from \"../functional/loadscript\"\r\nconst Checkuser: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history =useHistory()\r\n  const res = useSelector((state:RootStateOrAny) => state);\r\n  console.log(res)\r\n  const redx = JSON.parse(JSON.stringify(res));\r\n  const paymentDue = (amount:number,_id:any,receipt:any) =>{\r\n    // display user informations, bills\r\n   const orderdetails ={  /// created order object for pending paymnet\r\n      orderamount : amount,\r\n      receipt :receipt,\r\n      objectid : _id,\r\n      duepayment : 0,\r\n\r\n    }\r\n    if(LoadRazer())//loading paymnet api\r\n    if (res === null) {\r\n      console.log(\"heee\");\r\n      history.push(\"/login\");\r\n      console.log(\"not pushed\");\r\n    } else {\r\n      if(orderdetails.receipt === \"\")\r\n      {\r\n        orderdetails.receipt = recieptgenerator(res);\r\n        console.log(orderdetails)\r\n      }\r\n      dispatch(actions.get_payment(orderdetails));\r\n      console.log(\"here\");\r\n      history.push(\"/payment_page\");\r\n    }\r\n    console.log(amount,_id)\r\n  }\r\n  const checkduepay = (duepayment:any,_id:any,receipt:any) =>{ //check if a payment is due \r\n    if(duepayment === 0)\r\n    {\r\n      return (<div>NO Due Remaining</div>)\r\n    }\r\n    else{ // create a button calling to paymentDue to initiate payment\r\n      return <button onClick={()=>paymentDue(duepayment,_id,receipt)}>Pay RS.{duepayment}</button>\r\n    }\r\n  }\r\n \r\n  function userdetails() {\r\n    console.log(redx.user_info)\r\n    if(redx.user_info!==null)\r\n  {dispatch(actions.user_fetch({username:redx.user_info.username,password:redx.user_info.password}));\r\n  detailsprint()}else{\r\n    history.push(\"/login\")\r\n  }\r\n  }\r\n  function detailsprint() { // function for printing the order lists and other details\r\n    console.log(redx)\r\n    if (redx.user_info !== null) {\r\n      // console.log(redx)\r\n      const list = [];\r\n      list.push(<li key=\"start\"><b>Receipt&nbsp;Total&nbsp;DuePayment</b></li>)\r\n      let count = 0;\r\n      for (const [i, {_id,receipt,total,duepayment}] of redx.user_info.transid.entries()) { // create a list of orders\r\n        if (count !== 5) {\r\n          list.push(<li key={_id}>{receipt}&nbsp;RS.{total}&nbsp;{checkduepay(duepayment,_id,receipt)}</li>);\r\n          count += 1;\r\n        } else break;\r\n      }\r\n      return ( // returning th content along with format for rendering\r\n        \r\n        <div>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              User Details\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Username :{redx.user_info.username}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <br />\r\n              {/* {redx.user_info.transid[0]}{console.log(list)} */}\r\n              {list}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      );\r\n    } else {\r\n     \r\n      return <div> login to display data</div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"checkuser\")}\r\n      <Card>\r\n        {detailsprint()}\r\n        <CardActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={userdetails}>\r\n            Check / Click to refresh after payment\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Checkuser;\r\n","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\updateTransaction.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\PaymentPage.tsx",["81"],"\r\nimport { Button } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../actions/\";\r\nimport logo from \"../logo.svg\";\r\nimport  Alert  from '@material-ui/lab/Alert';\r\nconst PaymentPage: React.FC = () => { // this page starts the payment where user fill paymnet details to checkout\r\n  const res = useSelector((state) => state);\r\n  const history = useHistory();\r\n  console.log(res)\r\n  let redx: any;\r\n  useEffect(() => {\r\n    redx = JSON.parse(JSON.stringify(res));\r\n    if (redx.payment_status!==null ) { // checking if there is a successfull callback of paymnet completion\r\n      if( redx.payment_status.msg === \"success\")\r\n    {  history.push(\"/payment_page/updateTransactions\");} //if yes move to next page \"Transaction Update\" to update database\r\n      else{\r\n        alert(\"paymnet failed.. Try again\");\r\n        history.push(\"/\") // try again (i have to make this code better ** bad error handling)\r\n      }\r\n    } else console.log(\"ooh come on\");\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  function DisplayPayment() {//setting up paymnet script and loading it up  \r\n    if (redx.payment===null) {\r\n      alert(\"Offline\");\r\n    }\r\n    const options = { ///creating details to send to psp server\r\n      key: \"rzp_test_j9UI9PNWEZNmJN\",\r\n      amount: redx.payment.amount.toString(),\r\n      currency: redx.payment.currency,\r\n      name: redx.payment.product_name,\r\n      description: \"Test\",\r\n      image: { logo },\r\n      order_id: redx.payment.id,\r\n      handler: async function (response: any) { // communicationg with psp server and getting callback as response\r\n        const data = {\r\n          orderCreationId: redx.payment.id,\r\n          razorpayPaymentId: response.razorpay_payment_id,\r\n          razorpayOrderId: response.razorpay_order_id,\r\n          razorpaySignature: response.razorpay_signature,\r\n          amount: options.amount,\r\n          description: options.description,\r\n          date: new Date(),\r\n        };\r\n        dispatch(actions.payment_handler(data));//dispatching response to server to verify the payment \r\n      },\r\n\r\n      prefill: {\r\n        name: \"Suraj Kachhap\",\r\n        email: \"sja@as.com\",\r\n        contact: \"9999999999\",\r\n      },\r\n    };\r\n    const paymentObject = new (window as any).Razorpay(options); //opening the window for psp gateway\r\n    paymentObject.open();\r\n  }\r\n  function displaypaymentdetails() // displaing some info about order details\r\n  { const redx = JSON.parse(JSON.stringify(res));\r\n    if(redx.payment!==null)\r\n    return(<div>\r\n      <div>Product:{redx.payment.product_name}</div>\r\n      <div>Amount:{(redx.payment.amount/100).toString()}</div>\r\n      <div>OrderId: {redx.payment.id}</div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      {displaypaymentdetails()}\r\n      <Alert severity=\"warning\">Amount will be deducted .You Sure</Alert>\r\n       <Button variant=\"contained\" color=\"primary\" onClick={DisplayPayment }>Confirm Order</Button>\r\n      Payment page\r\n    </div>\r\n  );\r\n};\r\nexport default PaymentPage;\r\n",["82","83"],"D:\\worksz\\ionic\\payment-mod\\client\\src\\actions\\index.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\App.tsx",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\userInfo.js",[],["84","85"],"D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\loadscript.tsx",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\LoginPage.tsx",["86","87","88","89","90","91"],"import React, { useEffect, useState } from \"react\";\r\nimport {FormGroup,FormControl, Input, InputLabel, Button, FormHelperText} from \"@material-ui/core\"\r\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../actions/\"\r\nimport { useHistory } from \"react-router\";\r\nimport \"../style/login.css\"\r\nconst LoginPage:React.FC = () =>{ /// USed for login :: user might jump to this on performing actions which can be \r\n    //only be done by a authenticated user\r\n    console.log(\"---login pagge ---\")\r\n    const dispatch  = useDispatch()\r\n    const res = useSelector((state:RootStateOrAny)=>state)\r\n    const history = useHistory()\r\n    const [user,setuser] = useState(\"\");// storing onChange username\r\n    const [passrd,setpasswrd] = useState(\"\")//storing onChange password\r\n    const obj = { //object created to send to server\r\n        username: user,\r\n        password : passrd\r\n    }\r\n function checkuser() //check if user is loged in or not\r\n {      const redx =JSON.parse(JSON.stringify(res))\r\n        console.log(redx)\r\n        if(redx.user_info!==null)\r\n        history.push(\"/\")\r\n }\r\n  \r\nasync function submitLogin(userdetails:object) //dispatching object to backend to verify user\r\n{   const redx = JSON.parse(JSON.stringify(res))\r\n    console.log(\"form submit-->\")\r\n    dispatch(actions.user_fetch(userdetails))\r\n    if(redx!==null)\r\n    history.push(\"/\")\r\n}\r\nreturn(\r\n    <div>\r\n        <div className=\"loginblock\">\r\n            {checkuser()}\r\n        <form onSubmit={()=>submitLogin(obj)}> // login form\r\n        \r\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n        <input type=\"text\" name=\"username\" onChange={e=>setuser(e.target.value)}/>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n        <input type=\"password\" name=\"password\" onChange={e=>setpasswrd(e.target.value)}/>\r\n        <Button type=\"submit\">Login</Button>\r\n       </form>\r\n        </div>\r\n       \r\n    </div>\r\n)\r\n}\r\n\r\nexport default LoginPage;","D:\\worksz\\ionic\\payment-mod\\client\\src\\index.tsx",["92","93","94","95"],"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\index.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payReducer.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\TransactionUpdate.tsx",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\serviceworker.tsx",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\servicework.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\RegisterPage.tsx",["96"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector,RootStateOrAny } from \"react-redux\";\r\nimport \"../style/login.css\"\r\nimport {create_user} from \"../actions/\"\r\nimport { useHistory } from \"react-router\";\r\nconst RegisterPage:React.FC = ()=>{ // user registration page\r\n    console.log(\"Register page-->\")\r\n    const history  = useHistory()\r\n    const res= useSelector((state:RootStateOrAny)=>state.user_info)\r\n    const redx =JSON.parse(JSON.stringify(res))\r\n    const [username,setuser] = useState(\"\");\r\n    const [password,setpass] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const object ={\r\n        username,\r\n        password,\r\n    }\r\n    function checkuser() //check if user is loged in or not\r\n    {      \r\n           console.log(redx)\r\n           if(redx!==null)\r\n           history.push(\"/\")\r\n    }\r\n    const submitRegister = () => { //dispathcing registratoin info\r\n\r\n        dispatch(create_user(object))\r\n    }\r\n    return(\r\n        <div>\r\n            {checkuser()}\r\n            <form className=\"loginblock\" onSubmit={submitRegister}>\r\n                <label htmlFor=\"username\">\r\n                    username\r\n                </label>\r\n                <input type=\"text\" id=\"username\" onChange={e=>setuser(e.target.value)}>\r\n                </input>\r\n                <label htmlFor=\"password\">\r\n                password\r\n                </label>\r\n                <input type=\"password\" id=\"password\" onChange={e=>setpass(e.target.value)}></input>\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;",{"ruleId":"97","severity":1,"message":"98","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":4,"column":3,"nodeType":"99","messageId":"100","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":13},{"ruleId":"97","severity":1,"message":"103","line":10,"column":17,"nodeType":"99","messageId":"100","endLine":10,"endColumn":26},{"ruleId":"97","severity":1,"message":"104","line":72,"column":19,"nodeType":"99","messageId":"100","endLine":72,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":15,"column":12,"nodeType":"107","endLine":15,"endColumn":43},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"97","severity":1,"message":"103","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"112","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"113","line":2,"column":19,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"114","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"115","line":2,"column":59,"nodeType":"99","messageId":"100","endLine":2,"endColumn":73},{"ruleId":"116","severity":1,"message":"117","line":37,"column":47,"nodeType":"118","endLine":39,"endColumn":13},{"ruleId":"97","severity":1,"message":"119","line":7,"column":40,"nodeType":"99","messageId":"100","endLine":7,"endColumn":47},{"ruleId":"97","severity":1,"message":"120","line":11,"column":8,"nodeType":"99","messageId":"100","endLine":11,"endColumn":21},{"ruleId":"97","severity":1,"message":"121","line":13,"column":8,"nodeType":"99","messageId":"100","endLine":13,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":19,"column":27,"nodeType":"118","endLine":20,"endColumn":5},{"ruleId":"97","severity":1,"message":"103","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},"@typescript-eslint/no-unused-vars","'loadscript' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Axios' is defined but never used.","'useEffect' is defined but never used.","'i' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'redx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'compose' is defined but never used.","'serviceWorker' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]