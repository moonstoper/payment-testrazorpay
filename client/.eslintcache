[{"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payStatusReducer.js":"1","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Page1.tsx":"2","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Checkuser.tsx":"3","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\updateTransaction.js":"4","D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\PaymentPage.tsx":"5","D:\\worksz\\ionic\\payment-mod\\client\\src\\actions\\index.js":"6","D:\\worksz\\ionic\\payment-mod\\client\\src\\App.tsx":"7","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\userInfo.js":"8","D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\loadscript.tsx":"9","D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\LoginPage.tsx":"10","D:\\worksz\\ionic\\payment-mod\\client\\src\\index.tsx":"11","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\index.js":"12","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payReducer.js":"13","D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\TransactionUpdate.tsx":"14"},{"size":326,"mtime":1608246762516,"results":"15","hashOfConfig":"16"},{"size":4106,"mtime":1608248520168,"results":"17","hashOfConfig":"16"},{"size":3685,"mtime":1608248452385,"results":"18","hashOfConfig":"16"},{"size":354,"mtime":1608246817343,"results":"19","hashOfConfig":"16"},{"size":3138,"mtime":1608249058592,"results":"20","hashOfConfig":"16"},{"size":2088,"mtime":1608245319979,"results":"21","hashOfConfig":"16"},{"size":953,"mtime":1608246875509,"results":"22","hashOfConfig":"16"},{"size":313,"mtime":1608246849109,"results":"23","hashOfConfig":"16"},{"size":1440,"mtime":1608246167292,"results":"24","hashOfConfig":"16"},{"size":2000,"mtime":1608245492197,"results":"25","hashOfConfig":"16"},{"size":1434,"mtime":1608246970469,"results":"26","hashOfConfig":"16"},{"size":413,"mtime":1608246688621,"results":"27","hashOfConfig":"16"},{"size":368,"mtime":1608246735062,"results":"28","hashOfConfig":"16"},{"size":1044,"mtime":1608246644095,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"61762c",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payStatusReducer.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Page1.tsx",["66"],"import React, { useEffect, useState } from \"react\";\nimport * as actions from \"../actions/\";\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport loadscript, {\n  checkin,\n  recieptgenerator,\n  LoadRazer,\n} from \"../functional/loadscript\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert } from \"@material-ui/lab\";\nimport homemini from \"../assets/homemini.jpg\";\nimport Checkuser from \"./Checkuser\";\nconst Page1: React.FC = () => { // the front page or the paymnet page after which the payment process begins\n  const res = useSelector((state: RootStateOrAny) => state.user_info);\n  const [chkdate, setchkdate] = useState(\"\"); // getting checkin date\n  const [coutdate, setcoutdate] = useState(\"\"); // getting checkout date\n  console.log(res);\n  const orderdetails = { // creating payment object to be send to server to create payment instance\n    product_name: \"Product1\",\n    orderamount: 5000,\n    receipt: \"\",\n    duepayment: 0,\n    checkindate: chkdate,\n    checkoutdate: coutdate,\n  };\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.delete_paymnetdata());\n    console.log(res);\n  });\n  function prepay() { // using the function to check if checkin date is more than 7 days \n    if (checkin(chkdate)) { // and provide a option to only pay 30% upfront and 70% later\n      console.log(\"ok\");\n      return (\n        <span>\n          or\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => callRazer(true)}\n          >\n            pay amount {orderdetails.orderamount * 0.3}\n          </Button>\n        </span>\n      );\n    }\n  }\n  let history = useHistory();\n  async function callRazer(advancepay: boolean) {//calling function to load payment api in background start the paymnet process\n    //taking a boolean as parameter to check if user is paying 70% or 30%\n    if (LoadRazer()) { //loading script\n      if (advancepay) { // modifying orderdetails \n        orderdetails.duepayment = orderdetails.orderamount * 0.7;\n        orderdetails.orderamount = orderdetails.orderamount * 0.3;\n      }\n      if (res === null) { //checking user if no send to login screen\n        console.log(\"heee\");\n        history.push(\"/login\");\n        console.log(\"not pushed\");\n      } else { //if yess generate a receipt by calling a function\n        if (orderdetails.receipt === \"\") {\n          orderdetails.receipt = recieptgenerator(res);\n          console.log(orderdetails);\n        }// dispatching our orderdetails to server \n        dispatch(actions.get_payment(orderdetails));\n        console.log(\"here\");\n        history.push(\"/payment_page\");\n      }\n    }\n  }\n  function user() { // simple top button which either show user name or login link\n    if (res === null) return <span>login</span>;\n    else {\n      var redx = JSON.parse(JSON.stringify(res));\n      console.log(redx);\n      return <span>Hi {redx.username}</span>;\n    }\n  }\n  return (\n    <div>\n      Page1\n      <Alert severity=\"warning\">Payment</Alert>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => history.push(\"/login\")}\n      >\n        {user()}\n      </Button>\n      <br />\n      <img src={homemini} alt=\"pg_img\"></img>\n      <br />\n      <label id=\"checkin\">Checkin Date</label>\n      <input //checkin date input \n        id=\"checkin\"\n        type=\"date\"\n        onChange={(e) => setchkdate(e.target.value)}\n      />\n      <br />\n      <label id=\"checkout\">Checkout Date</label>\n      <input //checkout date input\n        id=\"checkout\"\n        type=\"date\"\n        onChange={(e) => setcoutdate(e.target.value)}\n      />\n      <br />\n      Name : {orderdetails.product_name}&nbsp; <br />\n      Amount:Rs{orderdetails.orderamount}\n      <br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => callRazer(false)}\n      >\n        pay amount {orderdetails.orderamount}\n      </Button>\n      {prepay()}\n      <Checkuser></Checkuser>\n      <a href=\"/userpage\">USer</a>\n    </div>\n  );\n};\n\nexport default Page1;\n",["67","68"],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\Checkuser.tsx",["69","70","71","72"],"import {\r\n  Button,\r\n  Card,\r\n  CircularProgress,\r\n  CardActions,\r\n  Typography,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport * as actions from \"../actions\";\r\nimport {LoadRazer,recieptgenerator} from \"../functional/loadscript\"\r\nconst Checkuser: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history =useHistory()\r\n  const res = useSelector((state:RootStateOrAny) => state);\r\n  console.log(res)\r\n  const redx = JSON.parse(JSON.stringify(res));\r\n  const paymentDue = (amount:number,_id:any,receipt:any) =>{\r\n    // display user informations, bills\r\n   const orderdetails ={  /// created order object for pending paymnet\r\n      orderamount : amount,\r\n      receipt :receipt,\r\n      objectid : _id,\r\n      duepayment : 0,\r\n\r\n    }\r\n    if(LoadRazer())//loading paymnet api\r\n    if (res === null) {\r\n      console.log(\"heee\");\r\n      history.push(\"/login\");\r\n      console.log(\"not pushed\");\r\n    } else {\r\n      if(orderdetails.receipt === \"\")\r\n      {\r\n        orderdetails.receipt = recieptgenerator(res);\r\n        console.log(orderdetails)\r\n      }\r\n      dispatch(actions.get_payment(orderdetails));\r\n      console.log(\"here\");\r\n      history.push(\"/payment_page\");\r\n    }\r\n    console.log(amount,_id)\r\n  }\r\n  const checkduepay = (duepayment:any,_id:any,receipt:any) =>{ //check if a payment is due \r\n    if(duepayment === 0)\r\n    {\r\n      return (<div>NO Due Remaining</div>)\r\n    }\r\n    else{ // create a button calling to paymentDue to initiate payment\r\n      return <button onClick={()=>paymentDue(duepayment,_id,receipt)}>Pay RS.{duepayment}</button>\r\n    }\r\n  }\r\n \r\n  function userdetails() {\r\n  \r\n    if(redx.user_info!==null)\r\n  {dispatch(actions.user_fetch({username:redx.user_info.username,password:redx.user_info.password}));\r\n  detailsprint()}else{\r\n    history.push(\"/login\")\r\n  }\r\n  }\r\n  function detailsprint() { // function for printing the order lists and other details\r\n    console.log(redx)\r\n    if (redx.user_info !== null) {\r\n      // console.log(redx)\r\n      const list = [];\r\n      list.push(<li key=\"start\"><b>Receipt&nbsp;Total&nbsp;DuePayment</b></li>)\r\n      let count = 0;\r\n      for (const [i, {_id,receipt,total,duepayment}] of redx.user_info.transid.entries()) { // create a list of orders\r\n        if (count !== 5) {\r\n          list.push(<li key={_id}>{receipt}&nbsp;RS.{total}&nbsp;{checkduepay(duepayment,_id,receipt)}</li>);\r\n          count += 1;\r\n        } else break;\r\n      }\r\n      return ( // returning th content along with format for rendering\r\n        <span>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              User Details\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Username :{redx.user_info.username}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <br />\r\n              {/* {redx.user_info.transid[0]}{console.log(list)} */}\r\n              {list}\r\n            </Typography>\r\n          </CardContent>\r\n        </span>\r\n      );\r\n    } else {\r\n     \r\n      return <div> login to display data</div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"checkuser\")}\r\n      <Card>\r\n        {detailsprint()}\r\n        <CardActions>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={userdetails}>\r\n            Check / Click to refresh after payment\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Checkuser;\r\n","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\updateTransaction.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\PaymentPage.tsx",["73"],"\r\nimport { Button } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../actions/\";\r\nimport logo from \"../logo.svg\";\r\nimport  Alert  from '@material-ui/lab/Alert';\r\nconst PaymentPage: React.FC = () => { // this page starts the payment where user fill paymnet details to checkout\r\n  const res = useSelector((state) => state);\r\n  const history = useHistory();\r\n  console.log(res)\r\n  let redx: any;\r\n  useEffect(() => {\r\n    redx = JSON.parse(JSON.stringify(res));\r\n    if (redx.payment_status!==null ) { // checking if there is a successfull callback of paymnet completion\r\n      if( redx.payment_status.msg === \"success\")\r\n    {  history.push(\"/payment_page/updateTransactions\");} //if yes move to next page \"Transaction Update\" to update database\r\n      else{\r\n        alert(\"paymnet failed.. Try again\");\r\n        history.push(\"/\") // try again (i have to make this code better ** bad error handling)\r\n      }\r\n    } else console.log(\"ooh come on\");\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  function DisplayPayment() {//setting up paymnet script and loading it up  \r\n    if (redx.payment===null) {\r\n      alert(\"Offline\");\r\n    }\r\n    const options = { ///creating details to send to psp server\r\n      key: \"rzp_test_j9UI9PNWEZNmJN\",\r\n      amount: redx.payment.amount.toString(),\r\n      currency: redx.payment.currency,\r\n      name: redx.payment.product_name,\r\n      description: \"Test\",\r\n      image: { logo },\r\n      order_id: redx.payment.id,\r\n      handler: async function (response: any) { // communicationg with psp server and getting callback as response\r\n        const data = {\r\n          orderCreationId: redx.payment.id,\r\n          razorpayPaymentId: response.razorpay_payment_id,\r\n          razorpayOrderId: response.razorpay_order_id,\r\n          razorpaySignature: response.razorpay_signature,\r\n          amount: options.amount,\r\n          description: options.description,\r\n          date: new Date(),\r\n        };\r\n        dispatch(actions.payment_handler(data));//dispatching response to server to verify the payment \r\n      },\r\n\r\n      prefill: {\r\n        name: \"Suraj Kachhap\",\r\n        email: \"sja@as.com\",\r\n        contact: \"9999999999\",\r\n      },\r\n    };\r\n    const paymentObject = new (window as any).Razorpay(options); //opening the window for psp gateway\r\n    paymentObject.open();\r\n  }\r\n  function displaypaymentdetails() // displaing some info about order details\r\n  { const redx = JSON.parse(JSON.stringify(res));\r\n    if(redx.payment!==null)\r\n    return(<div>\r\n      <div>Product:{redx.payment.product_name}</div>\r\n      <div>Amount:{(redx.payment.amount/100).toString()}</div>\r\n      <div>OrderId: {redx.payment.id}</div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      {displaypaymentdetails()}\r\n      <Alert severity=\"warning\">Amount will be deducted .You Sure</Alert>\r\n       <Button variant=\"contained\" color=\"primary\" onClick={DisplayPayment }>Confirm Order</Button>\r\n      Payment page\r\n    </div>\r\n  );\r\n};\r\nexport default PaymentPage;\r\n","D:\\worksz\\ionic\\payment-mod\\client\\src\\actions\\index.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\App.tsx",["74","75"],"import React from 'react';\nimport logo from './logo.svg';\nimport{BrowserRouter,Route} from \"react-router-dom\";\nimport './App.css';\nimport Page1 from \"./components/Page1\"\nimport Paymentpage from \"./functional/PaymentPage\";\nimport Update_Transaction from \"./functional/TransactionUpdate\"\nimport {default as UserPage} from \"./components/Checkuser\"\nimport LoginPage from \"./components/LoginPage\"\nimport axios from \"axios\"\nconst App:React.FC=()=> {\n  ///all navigation routes are defines here\n  return(\n    <div>\n      <BrowserRouter>\n      <Route exact path=\"/login\" component={LoginPage}></Route>\n      <Route exact path=\"/userpage\" component={UserPage}></Route>\n      <Route exact path=\"/\" component={Page1}></Route>\n      <Route exact path=\"/payment_page\" component={Paymentpage}></Route>\n      <Route exact path=\"/payment_page/updateTransactions\" component={Update_Transaction}></Route>\n      </BrowserRouter>\n    </div>\n  )\n};\n   \n\nexport default App;\n","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\userInfo.js",[],["76","77"],"D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\loadscript.tsx",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\components\\LoginPage.tsx",["78","79","80","81","82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport {FormGroup,FormControl, Input, InputLabel, Button, FormHelperText} from \"@material-ui/core\"\r\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../actions/\"\r\nimport { useHistory } from \"react-router\";\r\nimport \"../style/login.css\"\r\nconst LoginPage:React.FC = () =>{ /// USed for login :: user might jump to this on performing actions which can be \r\n    //only be done by a authenticated user\r\n    console.log(\"---login pagge ---\")\r\n    const dispatch  = useDispatch()\r\n    const res = useSelector((state:RootStateOrAny)=>state)\r\n    const history = useHistory()\r\n    const [user,setuser] = useState(\"\");// storing onChange username\r\n    const [passrd,setpasswrd] = useState(\"\")//storing onChange password\r\n    const obj = { //object created to send to server\r\n        username: user,\r\n        password : passrd\r\n    }\r\n function checkuser() //check if user is loged in or not\r\n {      const redx =JSON.parse(JSON.stringify(res))\r\n        console.log(redx)\r\n        if(redx.user_info!==null)\r\n        history.push(\"/\")\r\n }\r\n  \r\nasync function submitLogin(userdetails:object) //dispatching object to backend to verify user\r\n{   const redx = JSON.parse(JSON.stringify(res))\r\n    console.log(\"form submit-->\")\r\n    dispatch(actions.user_fetch(userdetails))\r\n    if(redx!==null)\r\n    history.push(\"/\")\r\n}\r\nreturn(\r\n    <div>\r\n        <div className=\"loginblock\">\r\n            {checkuser()}\r\n        <form onSubmit={()=>submitLogin(obj)}> // login form\r\n        \r\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n        <input type=\"text\" name=\"username\" onChange={e=>setuser(e.target.value)}/>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n        <input type=\"password\" name=\"password\" onChange={e=>setpasswrd(e.target.value)}/>\r\n        <Button type=\"submit\">Login</Button>\r\n       </form>\r\n        </div>\r\n       \r\n    </div>\r\n)\r\n}\r\n\r\nexport default LoginPage;","D:\\worksz\\ionic\\payment-mod\\client\\src\\index.tsx",["84","85","86"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport axios from \"axios\";\nconst store = createStore( // all services are defined and acclimated this is the main page\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nReactDOM.render(\n  <Provider store={store}> //using redux store in app to get the state variables \n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nif (\"serviceWorker\" in navigator) {  // script to start the service worker\n  window.addEventListener(\"load\", function () {\n    navigator.serviceWorker.register(\"./serviceworker.tsx\").then(\n      function (registration) {\n        console.log(\n          \"Service Worker registered successfully with scope\",\n          registration.scope\n        );\n      },\n      function (error) {\n        console.log(\"ServiceWorker registrayon failed\", error);\n      }\n    );\n  });\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\index.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\reducers\\payReducer.js",[],"D:\\worksz\\ionic\\payment-mod\\client\\src\\functional\\TransactionUpdate.tsx",[],{"ruleId":"87","severity":1,"message":"88","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":18},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"96","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":13},{"ruleId":"87","severity":1,"message":"97","line":10,"column":17,"nodeType":"89","messageId":"90","endLine":10,"endColumn":26},{"ruleId":"87","severity":1,"message":"98","line":72,"column":19,"nodeType":"89","messageId":"90","endLine":72,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":15,"column":12,"nodeType":"101","endLine":15,"endColumn":43},{"ruleId":"87","severity":1,"message":"102","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":12},{"ruleId":"87","severity":1,"message":"103","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":13},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"97","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"104","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":18},{"ruleId":"87","severity":1,"message":"105","line":2,"column":19,"nodeType":"89","messageId":"90","endLine":2,"endColumn":30},{"ruleId":"87","severity":1,"message":"106","line":2,"column":32,"nodeType":"89","messageId":"90","endLine":2,"endColumn":37},{"ruleId":"87","severity":1,"message":"107","line":2,"column":59,"nodeType":"89","messageId":"90","endLine":2,"endColumn":73},{"ruleId":"108","severity":1,"message":"109","line":37,"column":47,"nodeType":"110","endLine":39,"endColumn":13},{"ruleId":"87","severity":1,"message":"111","line":7,"column":40,"nodeType":"89","messageId":"90","endLine":7,"endColumn":47},{"ruleId":"87","severity":1,"message":"103","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":17,"column":27,"nodeType":"110","endLine":18,"endColumn":5},"@typescript-eslint/no-unused-vars","'loadscript' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'CircularProgress' is defined but never used.","'Axios' is defined but never used.","'useEffect' is defined but never used.","'i' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'redx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'logo' is defined but never used.","'axios' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'compose' is defined but never used.","no-global-assign","no-unsafe-negation"]